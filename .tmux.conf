# vim: set fdm=marker:

# Use `<prefix>:list-keys` to display all tmux keybindings

# Remap prefix
set-option -g prefix C-Space

# Vi mode {{{

# Always sync tmux buffer with clipboard buffer
bind-key -T copy-mode-vi Y send-keys -X copy-pipe-and-cancel "pbcopy"

# Vim-bindings for copying into tmux buffer
bind p paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

# Enable vi-like bindings for navigating a buffer in a window.
set-window-option -g mode-keys vi


# }}}

# Tmux panes {{{

# Vim-bindings to resize panes more easily
bind < resize-pane -L 10
bind > resize-pane -R 10
bind - resize-pane -D 10
bind + resize-pane -U 10

# Smart pane switching with awareness of Vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# }}}

# Tmux windows {{{

# use <prefix> s for horizontal split
bind s split-window -v
# use <prefix> v for vertical split
bind v split-window -h

# window switching with vim keybindings
bind-key l next-window
bind-key h previous-window

# }}}

# Theme {{{

# Hide tmux status bar bg
set -g status-bg default
# Hide right side text on tmux status bar
set -g status-right ''
# Border styles
set -g pane-border-style fg="#7D7D7D"
set -g pane-active-border-style fg="#70d7ff"

# Renumber windows after closing one
set -g renumber-windows on

# Enable true colors
set -g default-terminal "screen-256color"
# Tells Tmux that outside terminal supports true color
set -ga terminal-overrides ",xterm-256color*:Tc"

# }}}

# Mouse management {{{

# Scroll line by line with touchpad
bind-key -T copy-mode-vi WheelUpPane send -N1 -X scroll-up
bind-key -T copy-mode-vi WheelDownPane send -N1 -X scroll-down

# Mouse support
set -g mouse on

# }}}

# TPM plugins {{{

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
# Quickly open urls with <leader>u
set -g @plugin 'wfxr/tmux-fzf-url'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# }}}

# The default key bindings include <Ctrl-l> which is the readline key
# binding for clearing the screen. The following binding provides an
# alternate mapping to clear-screen.
bind C-l send-keys 'C-l'

# Make FocusGained work on vim
# https://unix.stackexchange.com/questions/149209/refresh-changed-content-of-file-opened-in-vim/383044#383044
set -g focus-events on

# https://github.com/neovim/neovim/wiki/FAQ#esc-in-tmux-or-gnu-screen-is-delayed
set -sg escape-time 0
